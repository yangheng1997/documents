1、 redis 的基本数据类型
		String		字符串
		List		list集合	列表
		Hash		哈希		字典
		Set			无序集合	集合
		Sorted Set	有序Set集合
		
	
2、常用的命令
		flushdb					清空当前数据库中的所有 key。执行删除在某个db环境下执行的话，只删除当前db的数据
		flushall				删除所有现有的数据库 
		dbsize					查看当前数据库中的 key的数量。
		keys * 					查看所有的key， *是通配符，可以组合使用。
		exists key				判断key 存不存在
		rename key newkey 		修改key的名字
		renamenx key newkey		仅当 newkey 不存在时，将 key 改名为 newkey 。
	String（字符串） 
			INCR  								加一
			DECR 								减一
			DECRBY key decrement				key 所储存的值减去给定的减量值（decrement）。
			
			APPEND key value					如果 key 已经存在并且是一个字符串， APPEND 命令将 value 追加到 key 原来的值的末尾。 
			
			set	key value						添加kye value
			get key 							取出key对应的value
			
			MSET key1 "Hello" key2 "World"		一次添加多个键值对
			mget key1 key2 key3					获取多个key对应的value
			
			MSETNX key1 "Hello" key2 "World"	同时设置一个或多个 key-value 对，当且仅当所有给定 key 都不存在。
	
	Hash(哈希)	
			HSET myhash field1 "foo"			添加一个哈希表，表中有字段 field1 "foo" 
			Hget myhash fieldl
			HgetALL	myhash						获取在哈希表中所有字段（键值对）  慎用
			Hexists myhash field2				判断哈希表中字段的key值存不存在
			HDEL myhash field2					删除一个或多个哈希表字段
			Hkeys key 							获取哈希表中的所有字段的key
			Hvals key 							获取哈希表中的所有字段的value
			Hlen key							获取一个key中的所有字段的数量
			Hmget key field1 [field2] 			根据给定哈希表中字段的一个或多个key值获取value ，字段key值不存在返回 nil
			Hmset key field1 value1 [field2 value2 ]	同时将多个 field-value (域-值)对设置到哈希表 key 中。
			
			
	List(列表)
				left	左
				right	右
			Lpush list1 1 2 3 4 5 6				从左边添加元素	其排列顺序是  6 5 4 3 2 1
			Rpush list1 a b c d e f 			从右边添加元素 	其排列顺序是  a b c d e f
			Lrange list1 0 -1 					从左边0角标开始查找所有元素 
			
			Lpop list1 							从左边取一个数据，第一个(取了之后，这个元素就没了)	
			Rpop list1							有右边取一个数据， 最后一个
			
			
			
	Set(无序不重复集合)
			smedmbers	set1					查看set1中所有元素
			sadd set1 1 2 4 2 					添加元素 	添加3个元素
			srem set1 1							删除元素
			sdiff seta setb						取差集 seta - setb
			sinter seta setb					取交集	共有的元素
			sunion	seta setb					取并集  二者相加 去重
			
	
	Sorted Set(有序Set集合)	
			运算代价最高。慎用。一般可以用list替代
			
			zadd zset1 1 a 3 b 2 c 				1 2 3 是分数  以分数的大小排序
			
			zrange zset1 0 -1 					按照 分数排序取出元素
			
			zrevrange zset1 0 -1 				反转取出元素
			
			
			
			
	设置key的过期时间
			expire key1 100 		设置有效期 100秒  可以 多次执行，执行后就重置为 100 秒
			ttl 	      key1 			如果返回正数，说明正在倒计时 ， -1 是永久保存的， -2 是过期的。
			persist	key1  		元素的持久化 
	redis的持久化
		Rdb：快照形式， 定期把内存中当前时刻的数据保存到磁盘。 Redis的默认支持的持久化方案。
		Aof：apperd only file 把所有对redis数据库操作的命令，增删改操作的命令。保存到文件中。数据库恢复时把所有命令执行一遍即可。
				
				rdb: 可能会丢数据
				aof: 频繁操作磁盘， 性能较低
				
		配置方法：	在redis.conf 文件中配置
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			